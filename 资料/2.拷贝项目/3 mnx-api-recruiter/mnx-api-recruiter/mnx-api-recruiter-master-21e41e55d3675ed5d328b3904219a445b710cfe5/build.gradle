buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "http://192.168.1.250:8081/nexus/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
/*apply plugin: 'checkstyle'*/

jar {
    baseName = 'mnx-api-recruiter'
    version = '3.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "http://192.168.1.250:8081/nexus/content/repositories/snapshots/"
    }
}
/*checkstyle {
    toolVersion = "7.3"
    checkstyleTest.enabled = false
}*/

/*防止warn 后继续构建，抛出异常后停止构建，达到提醒修改作用*//*
tasks.withType(Checkstyle).each {
    checkstyleTask ->
        checkstyleTask.doLast {
            reports.all {
                report ->
                    def outputFile = report.destination
                    if (outputFile.exists() && outputFile.text.contains("<error ")) {
                        throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
                    }
            }
        }
}*/

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.5")
    compile 'mnx-infra:mnx-infra-apiauth-server:0.0.2-SNAPSHOT'
    compile 'mnx-infra:mnx-infra-apiauth-client:0.0.2-SNAPSHOT'
    runtime('org.postgresql:postgresql')
    compile('org.springframework.boot:spring-boot-starter-cache')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
